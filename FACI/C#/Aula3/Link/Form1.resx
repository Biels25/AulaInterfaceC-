<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iAXXiuiN60MAAAAASUVORK5CYII=
</value>
  </data>
</root>